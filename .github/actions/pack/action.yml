name: Pack
description: Create package for release

runs:
  using: "composite"
  steps:
    - name: Create installer (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/jrsoftware/issrc/f59a90485af28067626e60ef7e42336e00ae7472/Files/Languages/Unofficial/ChineseSimplified.isl' -OutFile ChineseSimplified.isl
        Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/jrsoftware/issrc/e5e138e67bacd650650eac489fa861274a4b81ce/Files/Languages/Unofficial/ChineseTraditional.isl' -OutFile ChineseTraditional.isl
        Invoke-WebRequest -Uri "https://raw.githubusercontent.com/CrSjimo/diffscope-ci-tools-mirror/refs/heads/main/gpl-3.0.rtf" -OutFile gpl-3.0.rtf

        $content = Get-Content build/CMakeCache.txt
        $variableValues = @{}
        foreach ($line in $content) {
            $pattern = "^\s*(.*):(.*)=(.*)$"
            if ($line -Match $pattern) {
                $key = $matches[1].Trim()
                $value = $matches[3].Trim()
                $variableValues[$key] = $value
            }
        }

        $env:SETUP_APP_NAME = $variableValues.CMAKE_PROJECT_NAME
        $env:SETUP_APP_VERSION = $variableValues.CMAKE_PROJECT_VERSION
        $env:SETUP_APP_INSTALLED_DIR = $env:DIFFSCOPE_INSTALLED_DIR
        $env:SETUP_APP_BRIDGE_ARTEFACTS_DIR = $env:DIFFSCOPE_BRIDGE_ARTEFACTS_DIR
        $env:SETUP_MESSAGE_FILES_DIR = Resolve-Path .
        $env:SETUP_OUTPUT_DIR = Resolve-Path .
        $env:SETUP_OUTPUT_FILE_BASE = $env:BINARY_NAME
        $env:GPL3_LICENSE_PATH = Resolve-Path -Path gpl-3.0.rtf

        ISCC.exe scripts/setup/windows/setup.iss
        Write-Output PACKAGE_PATH=$(Resolve-Path -Path "$env:BINARY_NAME.exe") >> $env:GITHUB_ENV

    - name: Create DMG bundle (macOS)
      if: runner.os == 'macOS'
      shell: pwsh
      run: |
        Set-Location scripts/setup/macos
        Invoke-WebRequest -Uri "https://raw.githubusercontent.com/CrSjimo/diffscope-ci-tools-mirror/refs/heads/main/Packages.dmg" -OutFile Packages.dmg
        New-Item Packages -ItemType directory
        hdiutil attach -mountpoint Packages Packages.dmg
        sudo installer -pkg 'Packages/Install Packages.pkg' -target /
        Invoke-WebRequest -Uri "https://raw.githubusercontent.com/CrSjimo/diffscope-ci-tools-mirror/refs/heads/main/gpl-3.0.rtf" -OutFile gpl-3.0.rtf
        ln -s $env:DIFFSCOPE_BRIDGE_ARTEFACTS_DIR diffscope-bridge-artefacts
        packagesbuild diffscope-bridge-dist.pkgproj
        npm install
        node create-dmg.js $env:DIFFSCOPE_INSTALLED_DIR/DiffScope.app 'DiffScope Bridge.pkg' "$env:BINARY_NAME.dmg"
        Write-Output PACKAGE_PATH=$(Resolve-Path -Path "$env:BINARY_NAME.dmg") >> $env:GITHUB_ENV

    - name: Create Binary Archive (Ubuntu)
      if: runner.os == 'Linux'
      shell: pwsh
      run: |
        Set-Location scripts/setup/linux
        Move-Item $env:DIFFSCOPE_INSTALLED_DIR DiffScope

        Push-Location DiffScope/lib
        # Just steal the exclude list of dynamic libraries from AppImage
        $excludeListUrl = "https://raw.githubusercontent.com/AppImageCommunity/pkg2appimage/04af461f471a2bf49671057408e0313f1f731d4b/excludelist"
        $excludeList = (Invoke-WebRequest $excludeListUrl).Content.split("`n")
        if ($excludeList.Count -eq 0) {
          exit 1
        }
        foreach ($file in ($excludeList | ForEach-Object { ($_ -replace '\s*#.*$', '').Trim() } | Where-Object { $_ -ne "" })) {
          if (Test-Path $file) {
            Remove-Item $file
          }
        }
        Pop-Location

        New-Item "DiffScope Bridge" -ItemType directory
        Invoke-WebRequest -Uri "https://raw.githubusercontent.com/CrSjimo/diffscope-ci-tools-mirror/refs/heads/main/gpl-3.0.rtf" -OutFile "DiffScope Bridge/gpl-3.0.rtf"
        Move-Item $env:DIFFSCOPE_BRIDGE_ARTEFACTS_DIR/VST3/*.vst3 "DiffScope Bridge"
        Move-Item $env:DIFFSCOPE_BRIDGE_ARTEFACTS_DIR/LV2/*.lv2 "DiffScope Bridge"
        Move-Item create-desktop-entry.sh DiffScope
        Move-Item remove-desktop-entry.sh DiffScope
        tar --bzip2 -cf "$env:BINARY_NAME.tar.bz2" DiffScope "DiffScope Bridge" "Installation Guide.txt"
        Write-Output PACKAGE_PATH=$(Resolve-Path -Path "$env:BINARY_NAME.tar.bz2") >> $env:GITHUB_ENV